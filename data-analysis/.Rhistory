source('~/Code/cs376-project/data-analysis/analysis.R')
View(performances)
source('~/Code/cs376-project/data-analysis/analysis.R')
source('~/Code/cs376-project/data-analysis/analysis.R')
input_file = "cleaned_performance.csv"
performances = read.csv(input_file)
input_file = "cleaned_performance.csv"
source('~/Code/cs376-project/data-analysis/analysis.R')
source('~/Code/cs376-project/data-analysis/analysis.R')
performances = performances %>%
mutate(InterventionDiff = PostInterventionScore - PreInterventionScore)
require(dplyr)
performances = performances %>%
mutate(InterventionDiff = PostInterventionScore - PreInterventionScore)
library(dplyr)
performances = performances %>%
mutate(InterventionDiff = PostInterventionScore - PreInterventionScore)
View(performances)
performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean)
performances %>%
group_by(Condition) %>%
summarise(mean)
performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean)
performances %>%
group_by(Condition)
performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
source('~/Code/cs376-project/data-analysis/analysis.R')
# analysis.R
# Runs statistic analysis on performance data
# Setup -------------------------------------------------------------------
library(dplyr)
input_file = "cleaned_performance.csv"
# Load --------------------------------------------------------------------
performances = read.csv(input_file)
performances$Participant = as.factor(performances$Participant)
performances$Condition = as.factor(performances$Condition)
performances = performances %>%
mutate(InterventionDiff = PostInterventionScore - PreInterventionScore)
performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
ttest = t.test(performances %>% filter(Condition == 0),
performances %>% filter(Condition == 1),
paired=T)
ttest = t.test(performances %>% filter(Condition == 0) %>% select(DiffMean),
performances %>% filter(Condition == 1) %>% select(DiffMean),
paired=T)
ttest = t.test(performances %>% filter(Condition == 0) %>% select(InterventionDiff),
performances %>% filter(Condition == 1) %>% select(InterventionDiff),
paired=T)
ttest = t.test(performances %>% filter(Condition == 0) %>% select(InterventionDiff),
performances %>% filter(Condition == 1) %>% select(InterventionDiff),
paired=F)
ttest
performances %>% filter(Condition == 0) %>% select(InterventionDiff)
performances %>% filter(Condition == 1) %>% select(InterventionDiff)
ttest
source('~/Code/cs376-project/data-analysis/analysis.R')
source('~/Code/cs376-project/data-analysis/analysis.R')
source('~/Code/cs376-project/data-analysis/analysis.R')
source('~/Code/cs376-project/data-analysis/analysis.R')
ttest
source('~/Code/cs376-project/data-analysis/analysis.R')
ttest
source('~/Code/cs376-project/data-analysis/analysis.R')
ttest
library(pwr)
install.packages("pwr")
library(pwr)
ttest = t.test(performances %>% filter(Condition == 0) %>% select(InterventionDiff),
performances %>% filter(Condition == 1) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=F) # Welch
ttest
source('~/Code/cs376-project/data-analysis/analysis.R')
ttest
diff_means = performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
diff_means
pwr.t.test(d=d,
sig.level=.05,
type="two.sample",
alternative="two.sided")
diff_means = performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
d = abs(diff_means$DiffMean[1] - diff_means$DiffMean[2])
pwr.t.test(d=d,
sig.level=.05,
type="two.sample",
alternative="two.sided")
pwr.t.test(d=d,
power=.6,
sig.level=.05,
type="two.sample",
alternative="two.sided")
pwr.t.test(d=d,
power=.8,
sig.level=.05,
type="two.sample",
alternative="two.sided")
pwr.t.test(d=d,
power=.7,
sig.level=.05,
type="two.sample",
alternative="two.sided")
source('~/Code/cs376-project/data-analysis/analysis.R')
ttest
ttest = t.test(performances %>% filter(Condition == 0) %>% select(InterventionDiff),
performances %>% filter(Condition == 1) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=F,  # Welch
alternative="greater")
ttest
ttest = t.test(performances %>% filter(Condition == 1) %>% select(InterventionDiff),
performances %>% filter(Condition == 0) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=F,  # Welch
alternative="greater")
ttest
ttest = t.test(performances %>% filter(Condition == 1) %>% select(InterventionDiff),
performances %>% filter(Condition == 0) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=T,  # Welch
alternative="greater")
ttest
ttest = t.test(performances %>% filter(Condition == 1) %>% select(InterventionDiff),
performances %>% filter(Condition == 0) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=F,  # Welch
alternative="greater")
ttest
d = abs(diff_means$DiffMean[1] - diff_means$DiffMean[2]) / sd(performances$InterventionDiff)
pwr.t.test(d=d,
power=.7,
sig.level=.05,
type="two.sample",
alternative="greater")
pwr.t.test(d=1,
power=.7,
sig.level=.05,
type="two.sample",
alternative="greater")
d = abs(diff_means$DiffMean[1] - diff_means$DiffMean[2]) / sd(performances$InterventionDiff)
pwr.t.test(d=d,
power=.7,
sig.level=.05,
type="two.sample",
alternative="greater")
View(performances)
ttest = t.test(performances %>% filter(Condition == 1) %>% select(InterventionDiff),
performances %>% filter(Condition == 0) %>% select(InterventionDiff),
paired=F, # non-paired because we're testing between subjects, not within
var.equal=F,  # Welch
alternative="two.sided")
ttest
pwr.t.test(d=d,
power=.7,
sig.level=.05,
type="two.sample",
alternative="two.sided")
diff_means = performances %>%
group_by(Condition) %>%
summarise(DiffMean = mean(InterventionDiff))
View(diff_means)
